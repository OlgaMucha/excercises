001.  -

002. Loting of the random color of the rainbow

003. Calculating of the umber of days in given month + year

004. There are 5 multipliction questions asked and nswer is % of good answers

005. computer lotes 3 random digits where 1 can't be 0, user enters 3 digits,
	check if all digit of both user and random are equal and in this same order.If yes - HUGE WIN!!!! $12.000!!!,
	if this same digits but different order BIG WIN!!!! $5.000!!!, if 1 digit this same You win $1000!!", otherwise no win

006. Reverse string given by user

007. Checking if the by the user entered number is in array, if yes returning the position number. If the number entered is not in the array 	returning -1



026. (Game: scissor, rock, paper) Programming Exercise 3.17 gives a program that
        plays the scissors–rock–paper game. Revise the program to let the user continuously
        play until either the user or the computer wins more than two times than its
        opponent.
        Rock wins against scissors; paper wins against rock; and scissors wins against paper.

027. Given an array of ints, we'll say that a triple is a value appearing 3 times in the array.
    Return true if the array does not contain any triples.

028. (The longest common prefix) Write a program that prompts the user to enter two
	strings and displays the largest common prefix of the two strings. Here are some
	sample runs:
Enter the first string: Welcome to C++
Enter the second string: Welcome to programming
The common prefix is Welcome to
Enter the first string: Atlanta
Enter the second string: Macon
Atlanta and Macon have no common prefix

029.  (Math: pentagonal numbers) A pentagonal number is defined as n(3n-1)/2 for
    n = 1, 2, . . ., and so on. Therefore, the first few numbers are 1, 5, 12, 22, ... .
    Write a method with the following header that returns a pentagonal number:
    public static int getPentagonalNumber(int n)
    For example, getPentagonalNumber(1) returns 1 and getPentagonalNumber(
    2) returns 5. Write a test program that uses this method to display the first
    100 pentagonal numbers with 10 numbers on each line. Use the %7d format to
    display each number.

030. (Sum the digits in an integer) Write a method that computes the sum of the digits
in an integer. Use the following method header:
public static int sumDigits(long n)
For example, sumDigits(234) returns 9 (= 2 + 3 + 4)

031. (Check password) Some Websites impose certain rules for passwords. Write a
        method that checks whether a string is a valid password. Suppose the password
        rules are as follows:
        ■■ A password must have at least eight characters.
        ■■ A password must contain only letters and digits.
        ■■ A password must contain at least two digits.
        Write a program that prompts the user to enter a password and displays Valid
        Password if the rules are followed, or Invalid Password otherwise.

032. (Assign grades) Write a program that reads student scores, gets the best score, and
	then assigns grades based on the following scheme:
	Grade is A if score is Ú best -10;
	Grade is B if score is Ú best -20;
	Grade is C if score is Ú best -30;
	Grade is D if score is Ú best -40;
	Grade is F otherwise.
	The program prompts the user to enter the total number of students, then prompts
	the user to enter all of the scores, and concludes by displaying the grades.

033. (BinaryFormatException)
	Implement the bin2Dec method
	to throw a BinaryFormatException if the string is not a binary string. Define
	a custom exception called BinaryFormatException. Implement the bin2Dec
	method to throw a BinaryFormatException if the string is not a binary string.

034. (ArrayIndexOutOfBoundsException)
	Write a program that meets the following requirements:
	■■ Creates an array with 100 randomly chosen integers.
	■■ Prompts the user to enter the index of the array, then displays the corresponding
	element value. If the specified index is out of bounds, display the
	message "Out of Bounds".

035. (Count characters, words, and lines in a file) Write a program that will count
	the number of characters, words, and lines in a file. Words are separated by
	whitespace characters. The file name should be passed as a command-line
	argument, as shown:

	example output:
	c://excercises/java1 Welcome1.java
	File Welcome1 has
	170 characters
	22 words
	6 lines

036. 100 random integers entered in the txt file

037. (Replace text) ReplaceText.java, gives a program that replaces
	text in a source file and saves the change into a new file. Revise the program to
	save the change into the original file. For example, invoking
	java Exercise12_16 file oldString newString
	replaces oldString in the source file with newString.

038. (Data sorted?) Write a program that reads the strings from file SortedStrings.txt
	and reports whether the strings in the files are stored in increasing order. If the
	strings are not sorted in the file, it displays the first two strings that are out of
	the order.

039. (Process scores in a text file on the Web) Suppose the text file on the Web
	http://liveexample.pearsoncmg.com/data/Scores.txt contains an unspecified
	number of scores separated by spaces. Write a program that reads the scores
	from the file and displays their total and average.

040. (Create large dataset) Create a data file with 1,000 lines. Each line in the file
	consists of a faculty member’s first name, last name, rank, and salary. The
	faculty member’s first name and last name for the ith line are FirstNamei and
	LastNamei. The rank is randomly generated as assistant, associate, and full.
	The salary is randomly generated as a number with two digits after the decimal
	point. The salary for an assistant professor should be in the range from 50,000
	to 80,000, for associate professor from 60,000 to 110,000, and for full professor
	from 75,000 to 130,000. Save the file in Salary.txt. Here are some sample data:
		FirstName1 LastName1 assistant 60055.95
		FirstName2 LastName2 associate 81112.45
		. . .
		FirstName1000 LastName1000 full 92255.21

041. (Create a directory) Write a program that prompts the user to enter a directory
	name and creates a directory using the File’s mkdirs method. The program
	displays the message “Directory created successfully” if a directory is created
	or “Directory already exists” if the directory already exists.


042. (Occurrences of each letter) Write a program that prompts the user to enter a
	file name and displays the occurrences of each letter in the file. Letters are case
	insensitive. Here is a sample run:
	Enter a filename: Lincoln.txt
	Number of As: 56
	Number of Bs: 134
	...
	Number of Zs: 9

043. (Shuffle ArrayList) Write the following method that shuffles an ArrayList of
	numbers:
	public static void shuffle(ArrayList<Number> list)
044. (Create a rational-number calculator) Write a program similar to Listing 7.9,
	Calculator.java. Instead of using integers, use rationals, create methods add, substract, multiply and divide. 
	example: 1/2 + 3/5 = 11/10	
045. Program that calculates roots of quadratic equation (real and complex)
046. (Maximum element in ArrayList) Write the following method that returns the
	maximum value in an ArrayList of integers. The method returns null if the
	list is null or the list size is 0.
	public static Integer max(ArrayList<Integer> list)
	Write a test program that prompts the user to enter a sequence of numbers ending
	with 0 and invokes this method to return the largest number in the input.
047. (The Person, Student, Employee, Faculty, and Staff classes) Design a class
	named Person and its two subclasses named Student and Employee. Make
	Faculty and Staff subclasses of Employee. A person has a name, address,
	phone number, and e-mail address. A student has a class status (freshman, sophomore,
	junior, or senior). Define the status as an enum. An employee has an
	office, salary, and date hired. A faculty member has office
	hours and a rank. A staff member has a title. Override the toString method in
	each class to display the class name and the person’s name.
	Write a test program that creates a Person, Student, Employee, Faculty, and Staff, and invokes
	their toString() methods.
048. (Shuffle ArrayList) Write the following method that shuffles the elements in
	an ArrayList of integers:
	public static void shuffle(ArrayList<Integer> list)
049. (Largest rows and columns) Write a program that randomly fills in 0s and 1s
	into an n-by-n matrix, prints the matrix, and finds the rows and columns with the
	most 1s. (Hint: Use two ArrayLists to store the row and column indices with
	the most 1s.) Here is a sample run of the program:
	Enter the array size n: 4
	The random array is
	0011
	0011
	1101
	1010
	The largest row index: 2
	The largest column index: 2, 3
050. (Remove duplicates) Write a method that removes the duplicate elements from
	an array list of integers using the following header:
	public static void removeDuplicate(ArrayList<Integer> list)
	Write a test program that prompts the user to enter 10 integers to a list and displays
	the distinct integers in their input order and separated by exactly one space.
	Here is a sample run:
	Enter 10 integers: 34 5 3 5 6 4 33 2 2 4
	The distinct integers are 34 5 3 6 4 33 2
051. (ArrayList of Character) Write a method that returns an array list of Character
	from a string using the following header:
	public static ArrayList<Character> toCharacterArray(String s)
	For example, toCharacterArray("abc") returns an array list that contains
	characters 'a', 'b', and 'c'.
052. (Sort ArrayList) Write the following method that sorts an ArrayList of numbers:
	public static void sort(ArrayList<Integer> list)
	Write a test program that prompts the user to enter five numbers, stores them in
	an array list, and displays them in increasing order.
053. (InputMismatchException) Write a program that prompts the user to read
	two integers and displays their sum. Your program should prompt the user to
	read the number again if the input is incorrect.
054. (IllegalTriangleException)  In a triangle, the sum of any two sides is
	greater than the other side. The Triangle class must adhere to this rule.
	Create the IllegalTriangleException class, and modify the constructor
	of the Triangle class to throw an IllegalTriangleException object if a
	triangle is created with sides that violate the rule, as follows:
	/** Construct a triangle with the specified sides */
	public Triangle(double side1, double side2, double side3)
	throws IllegalTriangleException {
	// Implement it